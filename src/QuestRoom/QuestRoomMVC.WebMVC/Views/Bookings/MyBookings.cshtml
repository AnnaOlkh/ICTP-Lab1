@model List<QuestRoomMVC.WebMVC.ViewModel.MyBookingViewModel>
@using System.Globalization

@{
    var sortedModel = Model
        .OrderByDescending(m => m.EndTime > DateTime.UtcNow) // майбутні зверху
        .ThenByDescending(m => m.EndTime)
        .ToList();
}

<div class="bookings-list">
    @foreach (var item in sortedModel)
    {
        var isUpcoming = item.EndTime > DateTime.UtcNow;
        var cardClass = isUpcoming ? "card booking-upcoming booking-item" : "card booking-item";

        <div class="@cardClass shadow-sm mb-4">
            @if (!string.IsNullOrEmpty(item.RoomImageUrl))
            {
                <img src="@item.RoomImageUrl" class="fixed-image" alt="@item.RoomName" />
            }
            <div class="card-body">
                <h4 class="room-title">@item.RoomName</h4>

                <p class="card-text booking-date @(isUpcoming ? "text-danger" : "text-muted")">
                    @(isUpcoming ? "Заброньовано на:" : "Відвідано:") @item.EndTime.ToString("yyyy.MM.dd", new CultureInfo("uk-UA"))
                </p>

                @if (!isUpcoming && !item.AlreadyRated)
                {
                    <form asp-action="Rate" method="post" class="rating-form w-100">
                        <input type="hidden" name="roomId" value="@item.RoomId" />
                        <div class="rating-block d-flex flex-wrap align-items-center gap-2">
                            <div class="rating d-flex">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <input type="radio" name="score" id="star-@item.BookingId-@i" value="@i" hidden />
                                    <label for="star-@item.BookingId-@i" class="star-label" data-value="@i">&#9733;</label>
                                }
                            </div>
                            <button type="submit" class="btn btn-danger btn-sm">Оцінити</button>
                        </div>
                    </form>
                }
                else if (!isUpcoming && item.AlreadyRated && item.ExistingRating.HasValue)
                {
                    <div class="rating-result d-flex align-items-center mt-3">
                        <span class="text me-2">Оцінено:</span>
                        @for (int i = 1; i <= 5; i++)
                        {
                            <span class="@(i <= item.ExistingRating.Value ? "text-warning" : "text-secondary")">&#9733;</span>
                        }
                    </div>
                }
                else if (isUpcoming)
                {
                    <div class="d-flex flex-wrap align-items-center mt-3 gap-2">
                        <form asp-action="Cancel" method="post" onsubmit="return confirm('Скасувати бронювання?');">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="bookingId" value="@item.BookingId" />
                            <button type="submit" class="btn btn-outline-danger btn-sm">Скасувати бронювання</button>
                        </form>

                        <a asp-controller="Bookings"
                           asp-action="DownloadBookingPdf"
                           asp-route-id="@item.BookingId"
                           class="btn btn-outline-secondary btn-sm"
                           target="_blank">
                            Зберегти як PDF
                        </a>
                    </div>

                }
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.rating').forEach(ratingBlock => {
            const labels = ratingBlock.querySelectorAll('.star-label');
            labels.forEach(label => {
                label.addEventListener('click', function () {
                    const selectedValue = parseInt(this.dataset.value);
                    ratingBlock.dataset.selected = selectedValue;

                    labels.forEach(lbl => {
                        const val = parseInt(lbl.dataset.value);
                        lbl.classList.toggle('selected', val <= selectedValue);
                    });
                });
            });
        });
    </script>
}





